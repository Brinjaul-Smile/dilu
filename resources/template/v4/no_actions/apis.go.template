package apis

import (
	"dilu/modules/{{.PackageName}}/models"
	"dilu/modules/{{.PackageName}}/service"
	"dilu/modules/{{.PackageName}}/service/dto"

	"github.com/baowk/dilu-core/core/base"
	"github.com/gin-gonic/gin"
	"github.com/jinzhu/copier"
)

type {{.ClassName}}Api struct {
	base.BaseApi
}

// QueryPage 获取{{.TableComment}}列表
// @Summary Page接口
// @Tags {{.ClassName}}
// @Accept application/json
// @Product application/json
// @Param data body dto.{{.ClassName}}GetPageReq true "body"
// @Success 200 {object} base.Resp{data=base.PageResp{list=[]models.{{.ClassName}}}} "{"code": 200, "data": [...]}"
// @Router /api/v1/{{.PackageName}}/{{.ModuleName}}/page [post]
// @Security Bearer
func (e *{{.ClassName}}Api) QueryPage(c *gin.Context) {
	var req dto.{{.ClassName}}GetPageReq
	if err := c.ShouldBind(&req); err != nil {
		e.Error(c, err)
		return
	}
	list := make([]models.{{.ClassName}}, 10)
	var total int64
	if err := service.{{.ClassName}}S.Page(req, &list, &total, e.GetReqId(c)); err != nil {
		e.Err(c, err)
		return
	}
	e.Page(c, list, total, req.GetPage(), req.GetSize())
}

// Get 获取{{.TableComment}}
// @Summary 获取{{.TableComment}}
// @Tags {{.ClassName}}
// @Accept application/json
// @Product application/json
// @Param data body base.ReqId true "body"
// @Success 200 {object} base.Resp{data=models.{{.ClassName}}} "{"code": 200, "data": [...]}"
// @Router /api/v1/{{.PackageName}}/{{.ModuleName}}/get [post]
// @Security Bearer
func (e *{{.ClassName}}Api) Get(c *gin.Context) {
	var req base.ReqId
	if err := c.ShouldBind(&req); err != nil {
		e.Error(c, err)
		return
	}
	var data models.{{.ClassName}}
	if err := service.{{.ClassName}}S.Get(req.Id, &data, e.GetReqId(c)); err != nil {
		e.Err(c, err)
		return
	}
	e.Ok(c, data)
}

// Create 创建{{.TableComment}}
// @Summary 创建{{.TableComment}}
// @Tags {{.ClassName}}
// @Accept application/json
// @Product application/json
// @Param data body dto.{{.ClassName}}Dto true "body"
// @Success 200 {object} base.Resp{data=models.{{.ClassName}}} "{"code": 200, "data": [...]}"
// @Router /api/v1/{{.PackageName}}/{{.ModuleName}}/create [post]
// @Security Bearer
func (e *{{.ClassName}}Api) Create(c *gin.Context) {
	var req dto.{{.ClassName}}Dto
	if err := c.ShouldBind(&req); err != nil {
		e.Error(c, err)
		return
	}
	var data models.{{.ClassName}}
	copier.Copy(&data, req)
	if err := service.{{.ClassName}}S.Create(&data, e.GetReqId(c)); err != nil {
		e.Err(c, err)
		return
	}
	e.Ok(c, data)
}

// Update 更新{{.TableComment}}
// @Summary 更新{{.TableComment}}
// @Tags {{.ClassName}}
// @Accept application/json
// @Product application/json
// @Param data body dto.{{.ClassName}}Dto true "body"
// @Success 200 {object} base.Resp{data=models.{{.ClassName}}} "{"code": 200, "data": [...]}"
// @Router /api/v1/{{.PackageName}}/{{.ModuleName}}/update [post]
// @Security Bearer
func (e *{{.ClassName}}Api) Update(c *gin.Context) {
	var req dto.{{.ClassName}}Dto
	if err := c.ShouldBind(&req); err != nil {
		e.Error(c, err)
		return
	}
	var data models.{{.ClassName}}
	copier.Copy(&data, req)
	if err := service.{{.ClassName}}S.Update(&data, e.GetReqId(c)); err != nil {
		e.Err(c, err)
		return
	}
	e.Ok(c, data)
}

// Del 删除{{.TableComment}}
// @Summary 删除{{.TableComment}}
// @Tags {{.ClassName}}
// @Accept application/json
// @Product application/json
// @Param data body base.ReqIds true "body"
// @Success 200 {object} base.Resp{data=models.{{.ClassName}}} "{"code": 200, "data": [...]}"
// @Router /api/v1/{{.PackageName}}/{{.ModuleName}}/del [post]
// @Security Bearer
func (e *{{.ClassName}}Api) Del(c *gin.Context) {
	var req base.ReqIds
	if err := c.ShouldBind(&req); err != nil {
		e.Error(c, err)
		return
	}
	if err := service.{{.ClassName}}S.Del(req.Ids, e.GetReqId(c)); err != nil {
		e.Err(c, err)
		return
	}
	e.Ok(c)
}
